use java.io.File
use java.util.HashMap

use ::RestBridge/cfg/ContextNameInputWindow.bbj::ContextNameInputWindow
use ::RestBridge/cfg/RestBridgeConfigurator.bbj::RestBridgeConfigurator
use ::RestBridge/cfg/Context.bbj::Context
use ::RestBridge/cfg/Bridge.bbj::Bridge

class public RestBridgeConfigurationWindow

    field private BBjSysGui sysGui!
    field private BBjWindow window!
    field private BBjWindow prevWindow!

    field private BBjInputN inpnTimeout!
    field private BBjCheckBox chbUseGetAllowedFilters!

    field private Boolean cancelled! = Boolean.FALSE
    field private Boolean opend! = Boolean.FALSE

    field private BBjInputE inpeMapping!
    field private BBjInputE inpeRequestLog!
    field private BBjInputE inpeConfigFile!
    field private BBjInputE inpeAuthProgram!
    field private BBjInputE inpeProgramPrefix!
    field private BBjInputE inpeProgramSuffix!
    field private BBjInputE inpeWorkingDirectory!
    field private BBjInputE inpeInputHandler!
    field private BBjInputE inpeOutputHandler!
    field private BBjInputE inpeAdapterTerm!

    field private BBjCEdit previewField!

    field private BBjButton btnSave!
    field private BBjButton btnOK!
    field private BBjButton btnCancel!
    field private BBjButton btnPreviewCode!
    field private BBjButton btnAddContext!
    field private BBjButton btnRemoveBridge!
    field private BBjButton btnAddBridge!
    field private BBjButton btnBrowseConfigFile!
    field private BBjButton btnBrowseRequestLogFile!
    field private BBjButton btnBrowseWorkingDirectory!
    field private BBjButton btnBrowseAuthenticationFile!
    field private BBjButton btnBrowseInputHandler!
    field private BBjButton btnBrowseOutputHandler!

    field private BBjListButton lbDefaultCharset!
    
    field private BBjAdmin admin!

    field private RestBridgeConfigurator configurate!

    field private BBjVector contexts!

    field private Context selected!
    field private Bridge selectedBridge!

    field private BBjTree treeContext!
    field private int node!


    method public RestBridgeConfigurationWindow(BBjAdmin admin!,RestBridgeConfigurator configurate!)
        #selected! = null()
        #contexts! = new BBjVector()
        #configurate! = configurate!
        #admin!= admin!
        #init()
    methodend

    method private void init()
        #sysGui! = BBjAPI().openSysGui("X0")
        resID = #sysGui!.resOpen("RestBridge/res/RestBridge.arc")
        #window! = #sysGui!.createTopLevelWindow(resID, 101)

        #inpeMapping! = #window!.getInputE("inpeMapping")
        #inpeMapping!.setEnabled(0)
        #inpeMapping!.setInsertMode(1)

        #inpnTimeout! = #window!.getInputN("inpnTimeout")
        #inpnTimeout!.setValue(1000)
        #inpnTimeout!.setInsertMode(1)

        #inpeProgramPrefix! = #window!.getInputE("inpeProgramPrefix")
        #inpeProgramPrefix!.setInsertMode(1)

        #inpeProgramSuffix! = #window!.getInputE("inpeProgramSuffix")
        #inpeProgramSuffix!.setText(".bbj")
        #inpeProgramSuffix!.setInsertMode(1)
        
        #chbUseGetAllowedFilters! = #window!.getCheckBox("chbUseGetAllowedFilters")

        #inpeConfigFile! = #window!.getInputE("inpeConfigFile")
        #inpeConfigFile!.setInsertMode(1)
        
        #btnBrowseConfigFile! = #window!.getButton("btnBrowseConfigFile")
        #btnBrowseConfigFile!.setCallback(BBjAPI.ON_BUTTON_PUSH, #this!, "browseConfigFileButtonPush")
        
        #inpeWorkingDirectory! = #window!.getInputE("inpeWorkingDirectory")
        #inpeWorkingDirectory!.setInsertMode(1)

        #btnBrowseWorkingDirectory! = #window!.getButton("btnBrowseWorkingDirectory")
        #btnBrowseWorkingDirectory!.setCallback(BBjAPI.ON_BUTTON_PUSH, #this!, "browseWorkingDirectoryButtonPush")

        #inpeAuthProgram! = #window!.getInputE("inpeAuthProgram")
        #inpeAuthProgram!.setInsertMode(1)

        #btnBrowseAuthenticationFile! = #window!.getButton("btnBrowseAuthenticationFile")
        #btnBrowseAuthenticationFile!.setCallback(BBjAPI.ON_BUTTON_PUSH, #this!, "browseAuthFileButtonPush")

        #inpeRequestLog! = #window!.getInputE("inpeRequestLog")
        #inpeRequestLog!.setInsertMode(1)

        #btnBrowseRequestLogFile! = #window!.getButton("btnBrowseRequestLogFile")
        #btnBrowseRequestLogFile!.setCallback(BBjAPI.ON_BUTTON_PUSH, #this!, "browseRequestLogButtonPush")
        
        #inpeInputHandler! = #window!.getInputE("inpeInputHandler")
        #inpeInputHandler!.setInsertMode(1)
        
        #btnBrowseInputHandler! = #window!.getButton("btnBrowseInputHandler")
        #btnBrowseInputHandler!.setCallback(BBjButton.ON_BUTTON_PUSH, #this!, "browseInputHandlerButtonPush")
        
        #inpeOutputHandler! = #window!.getInputE("inpeOutputHandler")
        #inpeOutputHandler!.setInsertMode(1)
        
        #btnBrowseOutputHandler! = #window!.getButton("btnBrowseOutputHandler")
        #btnBrowseOutputHandler!.setCallback(BBjButton.ON_BUTTON_PUSH, #this!, "browseOutputHandlerButtonPush")
        
        #inpeAdapterTerm! = #window!.getInputE("inpeAdapterTerm")
        #inpeAdapterTerm!.setText("IO")
        #inpeAdapterTerm!.setInsertMode(1)
        
        #btnPreviewCode! = #window!.getButton("btnPreviewCode")
        #btnPreviewCode!.setCallback(BBjAPI.ON_BUTTON_PUSH, #this!, "previewCode")

        #btnOK! = #window!.getButton("btnOK")
        #btnOK!.setCallback(BBjButton.ON_BUTTON_PUSH,#this!,"okOnClick")

        #btnSave! = #window!.getButton("btnSave")
        #btnSave!.setCallback(BBjAPI.ON_BUTTON_PUSH, #this!, "saveClicked")

        #btnCancel! = #window!.getButton("btnCancel")
        #btnCancel!.setCallback(BBjAPI.ON_BUTTON_PUSH, #this!, "cancelClicked")

        #btnAddContext! = #window!.getButton("btnAddContext")
        #btnAddContext!.setCallback(BBjAPI.ON_BUTTON_PUSH, #this!, "addContextButtonPush")

        #btnAddBridge! = #window!.getButton("btnAddBridge")
        #btnAddBridge!.setCallback(BBjAPI.ON_BUTTON_PUSH, #this!,"addBridge")
        #btnAddBridge!.setEnabled(0)

        #btnRemoveBridge! = #window!.getButton("btnRemoveBridge")
        #btnRemoveBridge!.setCallback(BBjButton.ON_BUTTON_PUSH,#this!,"removeBridge")
        #btnRemoveBridge!.setEnabled(0)

        #lbDefaultCharset! = #window!.getListButton("lbDefaultCharset")
        
        #treeContext! = #window!.getTree("treeContext")
        #treeContext!.setSelectionMode(BBjTree.SINGLE_TREE_SELECTION)
        #treeContext!.setCallback(BBjTree.ON_TREE_SELECT,#this!,"onSelect")
        #treeContext!.setRoot(0,"contexts")
        #loadTree()

        #window!.setCallback(BBjAPI.ON_CLOSE, #this!, "closeWindow")

        #updateUI()
    methodend

    method public void show()
        BBjAPI().setCustomEventCallback("CloseWindowEvent", "CloseWindow")

        process_events

        CloseWindow:
    methodend

    method public void onSelect(BBjTreeNodeSelectedEvent event!)
        #onNodeSelect(event!.getNodeID())
    methodend

    method private void onNodeSelect(int id!)
        declare BBjVector vector!
        declare Context context!

        context! = null()
        vector! = new BBjVector()
        vector! = #treeContext!.getSelectedNodes()


        for i = 0 to #contexts!.size() -1
            buffer! = cast(Context,#contexts!.get(i))
            if (buffer!.getID() = id!) then
                context! = cast(Context,#contexts!.get(i))
                break
            endif
        next i

        if(context! <> null()) then
            #selected! = context!
            #selectedBridge! = null()
            #updateUI()
            #btnRemoveBridge!.setEnabled(0)
            #btnAddBridge!.setEnabled(1)
        else
            for i = 0 to #contexts!.size() -1
                 buffer! = cast(Context,#contexts!.get(i))
                 if(buffer!.getBridge(id!) <> null()) then
                    #selectedBridge! = cast(Context,#contexts!.get(i)).getBridge(id!)
                    #selected! = cast(Context,#contexts!.get(i))
                    #updateUI()
                    #btnRemoveBridge!.setEnabled(1)
                 endif
            next i
        endif

    methodend

    method private BBjspServletConfiguration reciveBridgeInformation()
        declare BBjspServletConfiguration servlet!

        if (!(#selectedBridge! = null()) AND !(#selected! = null())) then
            servlet! = #configurate!.getBBjspServlet(#selected!.getName(),#selectedBridge!.getMapping())
        else
            methodret null()
        endif
        methodret servlet!
    methodend

    method private void enableUI(Boolean enable!)
        #inpeRequestLog!.setEnabled(enable!)
        #inpeConfigFile!.setEnabled(enable!)
        #inpeAuthProgram!.setEnabled(enable!)
        #inpeProgramPrefix!.setEnabled(enable!)
        #inpeProgramSuffix!.setEnabled(enable!)
        #inpeWorkingDirectory!.setEnabled(enable!)
        #inpeOutputHandler!.setEnabled(enable!)
        #inpeInputHandler!.setEnabled(enable!)
        #inpnTimeout!.setEnabled(enable!)
        #btnPreviewCode!.setEnabled(enable!)
        #btnBrowseConfigFile!.setEnabled(enable!)
        #btnBrowseRequestLogFile!.setEnabled(enable!)
        #btnBrowseWorkingDirectory!.setEnabled(enable!)
        #btnBrowseAuthenticationFile!.setEnabled(enable!)
        #btnBrowseInputHandler!.setEnabled(enable!)
        #btnBrowseOutputHandler!.setEnabled(enable!)
        #inpeAdapterTerm!.setEnabled(enable!)
        #lbDefaultCharset!.setEnabled(enable!)
        #chbUseGetAllowedFilters!.setEnabled(enable!)
        #btnSave!.setEnabled(enable!)
    methodend
    
    method private void enableSubmitters(Boolean enable!)
        #btnOK!.setEnabled(enable!)
        #btnCancel!.setEnabled(enable!)
    methodend

    method private void updateUI()
        declare BBjspServletConfiguration servlet!

        servlet! = #reciveBridgeInformation()
        if (servlet! <> null()) then

            error = 1; #setTimeout(num(servlet!.getParameter("REST_TIMEOUT")),err=*next); error = 0
            if error = 1 then #setTimeout(0)

            #setMapping(servlet!.getMapping())
            #setProgramPrefix(servlet!.getParameter("REST_PGM_PREFIX"))
            #setProgramSuffix(servlet!.getParameter("REST_PGM_SUFFIX"))
            #setWorkingDirectoryPath(servlet!.getParameter("REST_WD"))
            #setAuthProgramPath(servlet!.getParameter("REST_AUTHPGM"))
            #setRequestLogPath(servlet!.getParameter("REST_REQUESTLOG"))
            #setConfigFilePath(servlet!.getConfig())

            error = 1; #setUseGetAllowedFilters(num(servlet!.getParameter("USE_GET_ALLOWED_FILTER")),err=*next); error = 0
            if error = 1 then #setUseGetAllowedFilters(0)

            #setConfigFilePath(servlet!.getConfig())
            #enableUI(1)
            #enableSubmitters(1)
        else
            #enableUI(0)
            #enableSubmitters(1)
            #inpeMapping!.setText("")
            #inpeRequestLog!.setText("")
            #inpeConfigFile!.setText("")
            #inpeAuthProgram!.setText("")
            #inpeProgramPrefix!.setText("")
            #inpeProgramSuffix!.setText("")
            #inpeWorkingDirectory!.setText("")
            #inpnTimeout!.setText("")
            #chbUseGetAllowedFilters!.setSelected(0)
        endif
    methodend

    method public Context getContext()
        methodret #selected!
    methodend

    method public void closeWindow(BBjCloseEvent event!)
        #cancelled! = Boolean.TRUE
        if #opend! then
            #prevWindow!.destroy()
        endif
        BBjAPI().postCustomEvent("CloseWindowEvent", "")
    methodend

    method public void closePrevWindow(BBjCloseEvent event!)
        #previewField!.destroy()
        #prevWindow!.destroy()
        #window!.setEnabled(1)
        #window!.focus()
        #opend! = Boolean.FALSE
    methodend

    method public void cancelClicked(BBjButtonPushEvent event!)
        #cancelled! = Boolean.TRUE
        BBjAPI().postCustomEvent("CloseWindowEvent", "")
    methodend

    method public void saveClicked(BBjButtonPushEvent event!)
        declare HashMap params!

        if (#selected! = null() OR #selectedBridge! = null()) then
            a = msgbox("No Endpoint selected!")
            methodret
        endif

        params! = new HashMap()
        params!.put("REST_TIMEOUT", str(#getTimeout()))
        params!.put("REST_WD", #getWorkingDirectoryPath())
        params!.put("REST_AUTHPGM", #getAuthProgramPath())
        params!.put("REST_PGM_PREFIX", #getProgramPrefix())
        params!.put("REST_PGM_SUFFIX", #getProgramSuffix())
        params!.put("USE_GET_ALLOWED_FILTER", str(int(#useGetAllowedFilters())))
        params!.put("REST_REQUESTLOG", #getRequestLogPath())
        params!.put("REST_INPUT_HANDLER", #getInputHandler())
        params!.put("REST_OUTPUT_HANDLER", #getOutputHandler())
        params!.put("REST_ADAPTERTERM", #getAdapterTerm())
        params!.put("REST_DEFAULT_CHARSET",#getCharset())
        
        #window!.setCursor(32514)
        #configurate!.editRestBridgeConfiguration(#selected!.getName(), #selectedBridge!.getMapping(), params!, #getConfigFilePath())
        #window!.setCursor(32512)

        a = msgbox("Endpoint configurations saved successfully!")
    methodend

    method public void windowKeypressEvent(BBjKeypressEvent e!)

        if e!.getKeyCode() = 27 then
            #prevWindow!.setVisible(0)
            #window!.setEnabled(1)
            #window!.focus()
        endif
    methodend

    method public void addContextButtonPush(BBjButtonPushEvent event!)
        declare ContextNameInputWindow wnd!
        declare Boolean contains!
        
        #enableUI(0)
        #enableSubmitters(0)
        #btnRemoveBridge!.setEnabled(0)
        #btnAddBridge!.setEnabled(0)

        wnd! = new ContextNameInputWindow(#sysGui!,#window!.getX()+#window!.getWidth()/2,#window!.getY()+#window!.getHeight()/2,"Context Name Input","Context Name:")
        wnd!.show()

        if(!wnd!.cancelled()) then
            name! = wnd!.getContextName()

              if(name! = "") then
                    a = msgbox("Invalid Context Name")
                    #addContextButtonPush(null())
              endif

              for i = 0 to #contexts!.size() -1
                  buffer! = cast(Context,#contexts!.get(i))
                  if(buffer!.getName() = name!) then
                        a = msgbox("Invalid Context Name")
                        #addContextButtonPush(null())
                  endif
              next i

              contains! = Boolean.FALSE
              for i = 0 to #contexts!.size() -1
                  buffer! = cast(Context,#contexts!.get(i))
                  if (buffer!.getName() = name!) then
                      contains! = Boolean.TRUE
                      break
                  endif
              next i

              if (name! <> "" AND !contains!) then
                    #btnAddContext!.setEnabled(0)
                    #window!.setCursor(32514)
                    #configurate!.addContext(name!)
                    #addContext(name!)
                    #btnAddContext!.setEnabled(1)
                    #window!.setCursor(32512)
                    a = msgbox("Context was created")
                    #btnAddBridge!.setEnabled(1)
              endif
        endif
        
        #updateUI()
    methodend

    method public void addBridge (BBjButtonPushEvent e!)
       declare ContextNameInputWindow wnd!
       declare java.lang.String name!
       declare File bbjHome!
        wnd! = new ContextNameInputWindow(#sysGui!,#window!.getX()+#window!.getWidth()/2,#window!.getY()+#window!.getHeight()/2,"Endpoint Mapping Input","Endpoint Mapping:")
        wnd!.show()

        if(!wnd!.cancelled()) then
            name! = wnd!.getContextName()
            if(name! = "" AND name! <> null()) then
                a = msgbox("Invalid Context Name")
                #addContextButtonPush(null())
                methodret
            endif

            if !(name!.endsWith("/*")) then
                name! = name! + "/*"
            endif

            if !(name!.startsWith("/")) then
                name! = "/" + name!
            endif
            name! = name!.replaceAll(" ","")

            buffer! = System.getProperty("basis.BBjHome") + "\plugins\RestBridge\authenticate.bbj"
            bbjHome! = new File(buffer!)
            auth! = bbjHome!.getAbsolutePath().replaceAll("\\|\/", java.io.File.separator,err=*next)

            params! = new HashMap()
            params!.put("REST_TIMEOUT","1000")
            params!.put("REST_WD", "")
            params!.put("REST_AUTHPGM",auth!)
            params!.put("REST_PGM_PREFIX","")
            params!.put("REST_PGM_SUFFIX",".bbj")
            params!.put("USE_GET_ALLOWED_FILTER","0")
            params!.put("REST_REQUESTLOG","")

            if (#selected!.getBridge(name!) = null()) then
                #configurate!.configureRestBridge(#selected!.getName(),name!,params!,"")
                #inpnTimeout!.setFocusable(1)
                #node! = #node! +1
                #selectedBridge! = new Bridge(name!,#node!)
                #selected!.addBridge(#selectedBridge!)
                a = msgbox("Endpoint successfully created!")
                #addBridge(name!,#node!)
            else
                a = msgbox("Mapping already exists!")
            endif
        endif
    methodend

    method public void removeBridge(BBjButtonPushEvent e!)
        if (!(#selectedBridge! = null()) AND !(#selected! = null()))
            a = msgbox("Are you sure you want to delete " + #selectedBridge!.getMapping() + " from " + #selected!.getName(),1)
            if a <> 1 then
                methodret
            endif
            #configurate!.removeRestBridgeFromContext(#selected!.getName(),#selectedBridge!.getMapping())
            a = msgbox("The Endpoint " + #selectedBridge!.getMapping() + " was deleted from Context "+#selected!.getName()+"." )
            #btnRemoveBridge!.setEnabled(0)
            #btnAddBridge!.setEnabled(0)

            parentNodeID! = #treeContext!.getParentNode(#selectedBridge!.getID())

            #removeBridge(#selectedBridge!)
            #selected!.removeBridge(#selectedBridge!)
            #selectedBridge! = null()
            #updateUI()
            
            #treeContext!.selectNode(parentNodeID!)
        else
            a = msgbox("No Bridge selected")
        endif
    methodend

    method private void removeBridge(Bridge bridge!)
        #treeContext!.removeNode(bridge!.getID())
    methodend

    method private void addContext(String name!)
        #node!= #node!+1
        #treeContext!.addExpandableNode(#node!,0,name!)
        #selected! = new Context(name!,#node!)
        #contexts!.add(#selected!)
        #treeContext!.selectNode(#node!)
    methodend

    method private void addBridge(String name!, int id!)
        #treeContext!.addNode(id!,#selected!.getID(),name!)

        #treeContext!.selectNode(id!)
        #onNodeSelect(id!)
    methodend

    method public void loadTree()
        declare BBjVector vector!
        declare BBjVector vector2!
        declare BBjspServletConfiguration bbjspServletConfiguration!

        #contexts!.clear()

        #treeContext!.removeNode(0)
        #node! = 0
        #treeContext!.setRoot(#node!,"contexts")

        vector! = #admin!.getJettyServerConfig().getContextNames()
        for i= 0 to vector!.size()-1

            #node! = #node! +1

            #treeContext!.addExpandableNode(#node!,parent,vector!.getItem(i).toString())
            #contexts!.add(new Context(vector!.getItem(i).toString(),#node!))
            vector2! = #admin!.getJettyServerConfig().getCustomContext(vector!.getItem(i).toString()).getBBjspServlets()
            branch_node! = #node!
            if vector2!.size() > 0 then
                for y=0 to vector2!.size()-1
                    bbjspServletConfiguration! = cast(BBjspServletConfiguration ,vector2!.getItem(y))
                    if bbjspServletConfiguration!.getClassName() = "RestBridge" then
                        #node! = #node!+1
                        #treeContext!.addNode(#node!,branch_node!,bbjspServletConfiguration!.getMapping())
                        buffer! = cast(Context,#contexts!.get(i))
                        buffer!.addBridge(new Bridge(bbjspServletConfiguration!.getMapping(),#node!))
                    endif
                next y
            endif
        next i

        for i = 1 to #node!
            if (#treeContext!.getNodeText(i) = #selectedBridge!) then
                if (#treeContext!.getNodeText(#treeContext!.getParentNode(i)) = #selected!) then
                    #treeContext!.selectNode(i)
                    #onNodeSelect(i)
                    break
                endif
            endif
        next i
    methodend

    method public void browseConfigFileButtonPush(BBjButtonPushEvent event!)
        path! = #inpeConfigFile!.getText()
        configFilePath! = #browse(path!,"Configuration File Selection", Boolean.FALSE, "","BBx config files"+$0a$+"*.bbx;*.cfg"+$0a$+"All files"+$0a$+"*.*")
        #inpeConfigFile!.setText(configFilePath!)
    methodend

    method public String browse(String path!, String title!, Boolean directorySelection!, String fileExtension!, String filter!)
        fileOpenPath! = dsk("")

        if(path! <> "") then
            declare File directory!
            directory! = new File(path!)

            if(directory!.exists() AND directory!.isDirectory()) then
                fileOpenPath! = directory!.getAbsolutePath()
            endif
        endif


        directoryPath$ = FILEOPEN("Configuration File Selection", fileOpenPath!,"",fileExtension!,filter!,directorySelection!)
        if(directoryPath$ <> "::CANCEL::") then
            methodret directoryPath$
        endif

        methodret ""
    methodend

    method public void browseRequestLogButtonPush(BBjButtonPushEvent event!)
        path! = #inpeRequestLog!.getText()
        logPath! = #browse(path!,"Request Log File Selection", Boolean.FALSE, "","All files"+$0a$+"*.*")
        #inpeRequestLog!.setText(logPath!)
    methodend
    
    method public void browseInputHandlerButtonPush(BBjButtonPushEvent event!)
        path! = #inpeRequestLog!.getText()
        logPath! = #browse(path!,"Input Handler Selection", Boolean.FALSE, "","All files"+$0a$+"*.*")
        #inpeInputHandler!.setText(logPath!)
    methodend

    method public void browseOutputHandlerButtonPush(BBjButtonPushEvent event!)
        path! = #inpeRequestLog!.getText()
        logPath! = #browse(path!,"Output Handler Selection", Boolean.FALSE, "","All files"+$0a$+"*.*")
        #inpeInputHandler!.setText(logPath!)
    methodend
    
    method public void browseWorkingDirectoryButtonPush(BBjButtonPushEvent event!)
        path! = #inpeWorkingDirectory!.getText()
        wdPath! = #browse(path!,"Working Directory Selection", Boolean.TRUE, "","")
        #inpeWorkingDirectory!.setText(wdPath!)
    methodend

    method public void browseAuthFileButtonPush(BBjButtonPushEvent event!)
        path! = #inpeAuthProgram!.getText()
        authProgramPath! = #browse(path!,"Authentication File Selection", Boolean.FALSE, "bbj","All Files"+$0a$+"*.*")
        #inpeAuthProgram!.setText(authProgramPath!)
    methodend

    method public void previewCode(BBjButtonPushEvent e!)

        #prevWindow! = #sysGui!.addWindow(#sysGui!.getAvailableContext(), #window!.getX(), #window!.getY(),#window!.getWidth()+100,#window!.getHeight(), "Codepreview", $00000002$)
        #opend! = Boolean.TRUE
        #prevWindow!.setCallback(BBjWindow.ON_KEYPRESS,#this!,"windowKeypressEvent")
        #window!.setEnabled(0)
        
        declare BBjButton btnCopy!
        btnCopy! = #prevWindow!.addButton(#prevWindow!.getAvailableControlID(),10,10,100,25,"Copy to Clipboard")
        btnCopy!.setCallback(BBjButton.ON_BUTTON_PUSH , #this!, "onClickCopy")
        
        declare BBjButton btnSaveAs!
        btnSaveAs! = #prevWindow!.addButton(#prevWindow!.getAvailableControlID(),130,10,100,25,"Save as")
        btnSaveAs!.setCallback(BBjButton.ON_BUTTON_PUSH, #this!, "onClickSaveAs")
        
        controlID = #prevWindow!.getAvailableControlID()
        #previewField! = #prevWindow!.addCEdit(controlID,0,45,#prevWindow!.getWidth(),#prevWindow!.getHeight() - 45,"",$0306$)
        declare BBjFont  font!

        font! = #sysGui!.makeFont("Consolas",12,0)
        #previewField!.setFont(font!)

        #prevWindow!.setCallback(BBjAPI.ON_CLOSE, #this!,"closePrevWindow")

        #previewField!.setText(#assembleCode())
    methodend

    method private String assembleCode()
        declare java.lang.StringBuilder builder!
        builder! = new java.lang.StringBuilder()

        builder!.append("use java.io.File"+$0A$+$0A$)
        builder!.append("declare File restBridgeFile!"+$0A$)
        builder!.append("declare File directory!"+$0A$)
        builder!.append("declare File adapterProgram!"+$0A$)
        builder!.append("declare BBjAdmin admin!"+$0A$)
        builder!.append("declare BBjJettyContextConfiguration contextConf!"+$0A$)
        builder!.append("declare BBjJettyServerConfiguration serverconfig!"+$0A$)
        builder!.append("declare BBjspServletConfiguration bridgeConf!"+$0A$+$0A$)
        builder!.append("declare String user!"+$0A$)
        builder!.append("declare String password!"+$0A$)
        builder!.append("declare String contextName!"+$0A$)
        builder!.append("declare String bridgeName!"+$0A$)
        builder!.append("declare String configFilePath!"+$0A$)
        builder!.append("declare String timeOut!"+$0A$)
        builder!.append("declare String workingDirectory!"+$0A$)
        builder!.append("declare String authPgm!"+$0A$)
        builder!.append("declare String preffix!"+$0A$)
        builder!.append("declare String suffix!"+$0A$)
        builder!.append("declare String useGetAllowedFilter!"+$0A$)
        builder!.append("declare String requestLogPath!"+$0A$+$0A$)
        builder!.append("user! = """"" +$0A$)
        builder!.append("password! = """""+$0A$)
        builder!.append("contextName! = """+#selected!.getName()+""""+$0A$)
        builder!.append("bridgeName! = """+#selectedBridge!.getMapping()+""""+$0A$)
        builder!.append("configFilePath! = """+#getConfigFilePath()+""""+$0A$)
        builder!.append("timeOut! = """+str(#getTimeout())+""""+$0A$)
        builder!.append("workingDirectory! = """+#getWorkingDirectoryPath()+""""+$0A$)
        builder!.append("authPgm! = """+#getAuthProgramPath()+""""+$0A$)
        builder!.append("preffix! = """+#getProgramPrefix()+""""+$0A$)
        builder!.append("suffix! = """+#getProgramSuffix()+""""+$0A$)
        builder!.append("useGetAllowedFilter! = """+str(#useGetAllowedFilters())+""""+$0A$)
        builder!.append("requestLogPath! = """+#getRequestLogPath()+""""+$0A$+$0A$)
        builder!.append("inputHandler! = """+#getInputHandler()+""""+$0A$)
        builder!.append("outputHandler! = """+#getOutputHandler()+""""+$0A$)
        builder!.append("adapterTerm! = """+#getAdapterTerm()+""""+$0A$)
        builder!.append("charset! = """+#getCharset()+""""+$0A$)
        builder!.append("admin! = BBjAPI().getAdmin(user!,password!)"+$0A$)
        builder!.append("serverConfig! = admin!.getJettyServerConfig()"+$0A$)
        builder!.append("directory! = new File(dsk("""") + dir(""""))"+$0A$+$0A$)
        builder!.append("REM Creating a new Context with default DocBase and a WelcomeFile"+$0A$)
        builder!.append("contextConf! = serverConfig!.createCustomContext(contextName!)"+$0A$)
        builder!.append("contextConf!.setDocBase(""$basis_home/htdocs"")"+$0A$)
        builder!.append("contextConf!.addWelcomeFile(""index.html"")"+$0A$)
        builder!.append("contextConf!.setPath(""/"" + contextName!)"+$0A$)
        builder!.append("serverConfig!.saveConfig()"+$0A$+$0A$)
        builder!.append("restBridgeFile! = new File(directory!.getParentFile(),""RestBridge.bbj"")"+$0A$)
        builder!.append("bridgeConf! = contextConf!.addBBjspServlet(""RestBridge"",bridgeName!,restBridgeFile!.getAbsolutePath())"+$0A$+$0A$)
        builder!.append("bridgeConf!.setConfig(configFilePath!)"+$0A$)
        builder!.append("adapterProgram! = new File(directory!.getParentFile(),""RestBCAdapter.bbj"")"+$0A$+$0A$)
        builder!.append("REM Here you can add Parameter to your Birdge."+$0A$)
        builder!.append("bridgeConf!.addParam(""REST_ADAPTERPGM"", adapterProgram!.getAbsolutePath())"+$0A$)
        builder!.append("bridgeConf!.addParam(""REST_ADAPTERTERM"", ""IO"")"+$0A$)
        builder!.append("bridgeConf!.addParam(""REST_TIMEOUT"",timeOut!)"+$0A$)
        builder!.append("bridgeConf!.addParam(""REST_WD"",workingDirectory!)"+$0A$)
        builder!.append("bridgeConf!.addParam(""REST_AUTHPGM"",authpgm!)"+$0A$)
        builder!.append("bridgeConf!.addParam(""REST_PGM_PREFIX"",preffix!)"+$0A$)
        builder!.append("bridgeConf!.addParam(""REST_PGM_SUFFIX"",suffix!)"+$0A$)
        builder!.append("bridgeConf!.addParam(""USE_GET_ALLOWED_FILTER"",useGetAllowedFilter!)"+$0A$)
        builder!.append("bridgeConf!.addParam(""REST_REQUESTLOG"",requestLogPath!)"+$0A$)
        builder!.append("serverConfig!.saveConfig()"+$0A$)

        methodret builder!.toString()
    methodend

    method public void okOnClick(BBjButtonPushEvent e!)
        if !( #selected! = null() OR #selectedBridge! = null()) then
            #saveClicked(null())
        endif

        BBjAPI().postCustomEvent("CloseWindowEvent", "")
    methodend

    method public void onClickCopy(BBjButtonPushEvent e!)
        CLIPFROMSTR 1, #previewField!.getText()
        methodret
    methodend
    
    method public void onClickSaveAs(BBjButtonPushEvent e!)
        FILE_NAME$=FILESAVE("Save File","","Restconfig","txt",FILTER$)
    methodend
    
    rem /**
    rem  * Returns the user entered value for the Timeout property.
    rem  *
    rem  * @return the timeout property value set by the user.
    rem  */
    method public BBjInt getTimeout()
        methodret int(#inpnTimeout!.getValue())
    methodend

    method public void setTimeout(BBjInt timeout%)
        #inpnTimeout!.setValue(timeout%)
    methodend


    method public String getMapping()
        methodret #inpeMapping!.getText()
    methodend

    method public void setMapping(String mapping!)
        #inpeMapping!.setText(mapping!)
    methodend

    method public String getProgramPrefix()
        methodret #inpeProgramPrefix!.getText()
    methodend

    method public void setProgramPrefix(String prefix!)
        if (prefix! = null()) then
            prefix! = ""
        endif

        #inpeProgramPrefix!.setText(prefix!)
    methodend

    method public String getProgramSuffix()
        methodret #inpeProgramSuffix!.getText()
    methodend

    method public void setProgramSuffix(String suffix!)
        if (suffix! = null()) then
            suffix! = ""
        endif
        #inpeProgramSuffix!.setText(suffix!)
    methodend

    method public String getConfigFilePath()
        methodret #inpeConfigFile!.getText()
    methodend

    method public void setConfigFilePath(String path!)
        if (path! = null()) then
            path! = ""
        endif
        #inpeConfigFile!.setText(path!)
    methodend

    method public String getWorkingDirectoryPath()
        methodret #inpeWorkingDirectory!.getText()
    methodend

    method public void setWorkingDirectoryPath(String path!)
        if (path! = null()) then
            path! = ""
        endif
        #inpeWorkingDirectory!.setText(path!)
    methodend

    method public String getAuthProgramPath()
        methodret #inpeAuthProgram!.getText()
    methodend

    method public void setAuthProgramPath(String path!)
        if (path! = null()) then
            path! = ""
        endif

        #inpeAuthProgram!.setText(path!)
    methodend

    method public Boolean useGetAllowedFilters()
        methodret #chbUseGetAllowedFilters!.isSelected()
    methodend

    method public void setUseGetAllowedFilters(Boolean enable!)
        #chbUseGetAllowedFilters!.setSelected(enable!)
    methodend

    method public Boolean cancelled()
        methodret #cancelled!
    methodend

    method public String getRequestLogPath()
        methodret #inpeRequestLog!.getText()
    methodend
    
    method public String getInputHandler()
        methodret #inpeInputHandler!.getText()
    methodend
    
    method public String getOutputHandler()
        methodret #inpeOutputHandler!.getText()
    methodend
    
    method public String getAdapterTerm()
        methodret #inpeAdapterTerm!.getText()
    methodend
    
    method public String getCharset()
        methodret #lbDefaultCharset!.getText()
    methodend
    
    method public void setRequestLogPath(String path!)
        if (path! = null()) then
            path! = ""
        endif

        #inpeRequestLog!.setText(path!)
    methodend

classend